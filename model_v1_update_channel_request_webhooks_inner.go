/*
ObsLabs API

# Authentication  ObsLabs uses basic auth to authenticate the API. You can create API keys in the account settings. Use your API key as the basic auth password. The username should be left blank (notice the colon sign before api-key that must be included). All requests must be made over https.  Example usage: ```bash curl -u :<YOUR API KEY> https://api.obslabs.io/v1/users/me ```  # Errors  The API returns a structured error response in case of failure. Below is the format of the error response object:  ```json {   \"error\": {     \"status\": 400,     \"code\": \"VALIDATION\",     \"message\": \"Validation errors occurred.\",     \"details\": [       {         \"field\": \"email\",         \"issue\": \"The email address is not in a valid format.\"       },       {         \"field\": \"password\",         \"issue\": \"The password must be at least 8 characters long.\"       }     ]   } } 

API version: 1.0
Contact: contact@obslabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_go

import (
	"encoding/json"
	"fmt"
)

// checks if the V1UpdateChannelRequestWebhooksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1UpdateChannelRequestWebhooksInner{}

// V1UpdateChannelRequestWebhooksInner struct for V1UpdateChannelRequestWebhooksInner
type V1UpdateChannelRequestWebhooksInner struct {
	Id *string `json:"id,omitempty"`
	Url string `json:"url"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1UpdateChannelRequestWebhooksInner V1UpdateChannelRequestWebhooksInner

// NewV1UpdateChannelRequestWebhooksInner instantiates a new V1UpdateChannelRequestWebhooksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UpdateChannelRequestWebhooksInner(url string) *V1UpdateChannelRequestWebhooksInner {
	this := V1UpdateChannelRequestWebhooksInner{}
	this.Url = url
	return &this
}

// NewV1UpdateChannelRequestWebhooksInnerWithDefaults instantiates a new V1UpdateChannelRequestWebhooksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UpdateChannelRequestWebhooksInnerWithDefaults() *V1UpdateChannelRequestWebhooksInner {
	this := V1UpdateChannelRequestWebhooksInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1UpdateChannelRequestWebhooksInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateChannelRequestWebhooksInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1UpdateChannelRequestWebhooksInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1UpdateChannelRequestWebhooksInner) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value
func (o *V1UpdateChannelRequestWebhooksInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *V1UpdateChannelRequestWebhooksInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *V1UpdateChannelRequestWebhooksInner) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1UpdateChannelRequestWebhooksInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateChannelRequestWebhooksInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1UpdateChannelRequestWebhooksInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1UpdateChannelRequestWebhooksInner) SetName(v string) {
	o.Name = &v
}

func (o V1UpdateChannelRequestWebhooksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1UpdateChannelRequestWebhooksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1UpdateChannelRequestWebhooksInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1UpdateChannelRequestWebhooksInner := _V1UpdateChannelRequestWebhooksInner{}

	err = json.Unmarshal(data, &varV1UpdateChannelRequestWebhooksInner)

	if err != nil {
		return err
	}

	*o = V1UpdateChannelRequestWebhooksInner(varV1UpdateChannelRequestWebhooksInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "url")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1UpdateChannelRequestWebhooksInner struct {
	value *V1UpdateChannelRequestWebhooksInner
	isSet bool
}

func (v NullableV1UpdateChannelRequestWebhooksInner) Get() *V1UpdateChannelRequestWebhooksInner {
	return v.value
}

func (v *NullableV1UpdateChannelRequestWebhooksInner) Set(val *V1UpdateChannelRequestWebhooksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UpdateChannelRequestWebhooksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UpdateChannelRequestWebhooksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UpdateChannelRequestWebhooksInner(val *V1UpdateChannelRequestWebhooksInner) *NullableV1UpdateChannelRequestWebhooksInner {
	return &NullableV1UpdateChannelRequestWebhooksInner{value: val, isSet: true}
}

func (v NullableV1UpdateChannelRequestWebhooksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UpdateChannelRequestWebhooksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


