/*
ObsLabs API

# Authentication  ObsLabs uses basic auth to authenticate the API. You can create API keys in the account settings. Use your API key as the basic auth password. The username should be left blank (notice the colon sign before api-key that must be included). All requests must be made over https.  Example usage: ```bash curl -u :<YOUR API KEY> https://api.obslabs.io/v1/users/me ```  # Errors  The API returns a structured error response in case of failure. Below is the format of the error response object:  ```json {   \"error\": {     \"status\": 400,     \"code\": \"VALIDATION\",     \"message\": \"Validation errors occurred.\",     \"details\": [       {         \"field\": \"email\",         \"issue\": \"The email address is not in a valid format.\"       },       {         \"field\": \"password\",         \"issue\": \"The password must be at least 8 characters long.\"       }     ]   } } 

API version: 1.0
Contact: contact@obslabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_go

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the OrganizationSubscriptionScheduledChangeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationSubscriptionScheduledChangeModel{}

// OrganizationSubscriptionScheduledChangeModel struct for OrganizationSubscriptionScheduledChangeModel
type OrganizationSubscriptionScheduledChangeModel struct {
	Action string `json:"action"`
	EffectiveAt time.Time `json:"effective_at"`
	ResumeAt *time.Time `json:"resume_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationSubscriptionScheduledChangeModel OrganizationSubscriptionScheduledChangeModel

// NewOrganizationSubscriptionScheduledChangeModel instantiates a new OrganizationSubscriptionScheduledChangeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationSubscriptionScheduledChangeModel(action string, effectiveAt time.Time) *OrganizationSubscriptionScheduledChangeModel {
	this := OrganizationSubscriptionScheduledChangeModel{}
	this.Action = action
	this.EffectiveAt = effectiveAt
	return &this
}

// NewOrganizationSubscriptionScheduledChangeModelWithDefaults instantiates a new OrganizationSubscriptionScheduledChangeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationSubscriptionScheduledChangeModelWithDefaults() *OrganizationSubscriptionScheduledChangeModel {
	this := OrganizationSubscriptionScheduledChangeModel{}
	return &this
}

// GetAction returns the Action field value
func (o *OrganizationSubscriptionScheduledChangeModel) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *OrganizationSubscriptionScheduledChangeModel) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *OrganizationSubscriptionScheduledChangeModel) SetAction(v string) {
	o.Action = v
}

// GetEffectiveAt returns the EffectiveAt field value
func (o *OrganizationSubscriptionScheduledChangeModel) GetEffectiveAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EffectiveAt
}

// GetEffectiveAtOk returns a tuple with the EffectiveAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationSubscriptionScheduledChangeModel) GetEffectiveAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveAt, true
}

// SetEffectiveAt sets field value
func (o *OrganizationSubscriptionScheduledChangeModel) SetEffectiveAt(v time.Time) {
	o.EffectiveAt = v
}

// GetResumeAt returns the ResumeAt field value if set, zero value otherwise.
func (o *OrganizationSubscriptionScheduledChangeModel) GetResumeAt() time.Time {
	if o == nil || IsNil(o.ResumeAt) {
		var ret time.Time
		return ret
	}
	return *o.ResumeAt
}

// GetResumeAtOk returns a tuple with the ResumeAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSubscriptionScheduledChangeModel) GetResumeAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ResumeAt) {
		return nil, false
	}
	return o.ResumeAt, true
}

// HasResumeAt returns a boolean if a field has been set.
func (o *OrganizationSubscriptionScheduledChangeModel) HasResumeAt() bool {
	if o != nil && !IsNil(o.ResumeAt) {
		return true
	}

	return false
}

// SetResumeAt gets a reference to the given time.Time and assigns it to the ResumeAt field.
func (o *OrganizationSubscriptionScheduledChangeModel) SetResumeAt(v time.Time) {
	o.ResumeAt = &v
}

func (o OrganizationSubscriptionScheduledChangeModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationSubscriptionScheduledChangeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["effective_at"] = o.EffectiveAt
	if !IsNil(o.ResumeAt) {
		toSerialize["resume_at"] = o.ResumeAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationSubscriptionScheduledChangeModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"effective_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationSubscriptionScheduledChangeModel := _OrganizationSubscriptionScheduledChangeModel{}

	err = json.Unmarshal(data, &varOrganizationSubscriptionScheduledChangeModel)

	if err != nil {
		return err
	}

	*o = OrganizationSubscriptionScheduledChangeModel(varOrganizationSubscriptionScheduledChangeModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "effective_at")
		delete(additionalProperties, "resume_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationSubscriptionScheduledChangeModel struct {
	value *OrganizationSubscriptionScheduledChangeModel
	isSet bool
}

func (v NullableOrganizationSubscriptionScheduledChangeModel) Get() *OrganizationSubscriptionScheduledChangeModel {
	return v.value
}

func (v *NullableOrganizationSubscriptionScheduledChangeModel) Set(val *OrganizationSubscriptionScheduledChangeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationSubscriptionScheduledChangeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationSubscriptionScheduledChangeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationSubscriptionScheduledChangeModel(val *OrganizationSubscriptionScheduledChangeModel) *NullableOrganizationSubscriptionScheduledChangeModel {
	return &NullableOrganizationSubscriptionScheduledChangeModel{value: val, isSet: true}
}

func (v NullableOrganizationSubscriptionScheduledChangeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationSubscriptionScheduledChangeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


