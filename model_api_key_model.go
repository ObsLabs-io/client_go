/*
ObsLabs API

# Authentication  ObsLabs uses basic auth to authenticate the API. You can create API keys in the account settings. Use your API key as the basic auth password. The username should be left blank (notice the colon sign before api-key that must be included). All requests must be made over https.  Example usage: ```bash curl -u :<YOUR API KEY> https://api.obslabs.io/v1/users/me ```  # Errors  The API returns a structured error response in case of failure. Below is the format of the error response object:  ```json {   \"error\": {     \"status\": 400,     \"code\": \"VALIDATION\",     \"message\": \"Validation errors occurred.\",     \"details\": [       {         \"field\": \"email\",         \"issue\": \"The email address is not in a valid format.\"       },       {         \"field\": \"password\",         \"issue\": \"The password must be at least 8 characters long.\"       }     ]   } }

API version: 1.0
Contact: contact@obslabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_go

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ApiKeyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyModel{}

// ApiKeyModel struct for ApiKeyModel
type ApiKeyModel struct {
	Id                   string       `json:"id"`
	Key                  string       `json:"key"`
	LastUsed             NullableTime `json:"last_used"`
	CreatedAt            time.Time    `json:"created_at"`
	AdditionalProperties map[string]interface{}
}

type _ApiKeyModel ApiKeyModel

// NewApiKeyModel instantiates a new ApiKeyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyModel(id string, key string, lastUsed NullableTime, createdAt time.Time) *ApiKeyModel {
	this := ApiKeyModel{}
	this.Id = id
	this.Key = key
	this.LastUsed = lastUsed
	this.CreatedAt = createdAt
	return &this
}

// NewApiKeyModelWithDefaults instantiates a new ApiKeyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyModelWithDefaults() *ApiKeyModel {
	this := ApiKeyModel{}
	return &this
}

// GetId returns the Id field value
func (o *ApiKeyModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiKeyModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiKeyModel) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *ApiKeyModel) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ApiKeyModel) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ApiKeyModel) SetKey(v string) {
	o.Key = v
}

// GetLastUsed returns the LastUsed field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ApiKeyModel) GetLastUsed() time.Time {
	if o == nil || o.LastUsed.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastUsed.Get()
}

// GetLastUsedOk returns a tuple with the LastUsed field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyModel) GetLastUsedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUsed.Get(), o.LastUsed.IsSet()
}

// SetLastUsed sets field value
func (o *ApiKeyModel) SetLastUsed(v time.Time) {
	o.LastUsed.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApiKeyModel) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiKeyModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApiKeyModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o ApiKeyModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["last_used"] = o.LastUsed.Get()
	toSerialize["created_at"] = o.CreatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiKeyModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"key",
		"last_used",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiKeyModel := _ApiKeyModel{}

	err = json.Unmarshal(data, &varApiKeyModel)

	if err != nil {
		return err
	}

	*o = ApiKeyModel(varApiKeyModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "key")
		delete(additionalProperties, "last_used")
		delete(additionalProperties, "created_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiKeyModel struct {
	value *ApiKeyModel
	isSet bool
}

func (v NullableApiKeyModel) Get() *ApiKeyModel {
	return v.value
}

func (v *NullableApiKeyModel) Set(val *ApiKeyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyModel(val *ApiKeyModel) *NullableApiKeyModel {
	return &NullableApiKeyModel{value: val, isSet: true}
}

func (v NullableApiKeyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
